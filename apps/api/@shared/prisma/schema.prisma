generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  username      String    @unique
  password      String
  walletBalance Int?      @default(0)
  totalSpent    Int?      @default(0)
  orders        Order[]
  emailVerified Boolean?  @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  active        Boolean?  @default(true)
  avatar        String?
  role          Role?     @default(CLIENT)

  token     Token?
  creatives Creative[] @relation("DesignerCreatives") // Relação com Creative
}

model Token {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hash   String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Order {
  id          Int          @id @default(autoincrement())
  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  type        CreativeType
  copy        String?
  niche       String?
  vision      String?
  reference   String?
  status      OrderStatus  @default(PENDING)
  price       Float
  createdAt   DateTime     @default(now())
  deliveredAt DateTime?

  // Pedido tem um criativo finalizado
  creative Creative?
}

model Creative {
  id         Int      @id @default(autoincrement())
  orderId    Int      @unique
  order      Order    @relation(fields: [orderId], references: [id])
  fileUrl    String
  createdAt  DateTime @default(now())
  designer   User?    @relation("DesignerCreatives", fields: [designerId], references: [id]) // Relação com User
  designerId Int? // Campo para armazenar o ID do designer
}

enum Role {
  CLIENT
  DESIGNER
  ADMIN
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELED
}

enum CreativeType {
  VIDEO
  IMAGE
  DEEPFAKE
}
